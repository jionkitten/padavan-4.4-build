name: Build R3G Pandavan 

on: workflow_dispatch

jobs:
  build:
    name: build
    runs-on: ubuntu-20.04
    if: ${{ !(github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) }}
    env:
      build_variant: ${{ matrix.build_variant }}
      targets: ${{ matrix.targets }}
      images_dir: /opt/images
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt update
          sudo apt install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd \
            fakeroot kmod cpio git python3-docutils gettext automake autopoint \
            texinfo build-essential help2man pkg-config zlib1g-dev libgmp3-dev \
            libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget libc-dev-bin
      - name: Prepare pandavan source
        run: |
          git clone --depth=1 https://github.com/jionkitten/padavan-4.4.git /opt/padavan
          cd /opt/padavan/toolchain-mipsel
          sh dl_toolchain.sh
          mkdir -p ${images_dir}
      - name: Override config
        run: cp config /opt/padavan/trunk/configs/templates/MI-R3G.config
      - name: Build firmware
        run: |
          cd /opt/padavan/trunk
          fakeroot ./build_firmware_modify MI-R3G
          mv -f images/*.trx ${images_dir}
      - name: Create archive
        run: |
           ls -lh ${images_dir}
           GIT_VERSION=`git rev-parse --short=7 HEAD 2>/dev/null` && [ -n "$GIT_VERSION" ] && \
           image_name=images_${build_variant}_${GIT_VERSION} || image_name=images_${build_variant}
           cd ${images_dir}; md5sum *.trx |tee md5sum.txt; 7z a -mx=9 ${image_name}.7z ./*
           echo "image_name=${image_name}" >> $GITHUB_ENV
      - name : Upload packages
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.image_name }}
          path: ${{ env.images_dir }}/*.7z
